{"name":"CTF PWN","slug":"CTF-PWN","count":6,"postlist":[{"title":"canary_pie绕过","uid":"5cbed18fc0178c7e2f7d933895162e2e","slug":"CTF/pwn/canary_pie绕过","date":"2022-01-18T11:53:50.000Z","updated":"2022-01-19T07:55:48.512Z","comments":true,"path":"api/articles/CTF/pwn/canary_pie绕过.json","keywords":null,"cover":"/img/22.jpg","text":" Canary_pie绕过Canary机制介绍canary是一种用来防护栈溢出的保护机制，原理是先在函数的入口处，从fs/gs寄存器中取出一个4字节或者8字节的值存到栈上，当程序结束后再检查这个值是否和存进去的值一致 Canary bypass只要保持canary值不变，依旧可以...","link":"","photos":[],"count_time":{"symbolsCount":928,"symbolsTime":"1 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Learn_PWN","uid":"0c0a9c1a2db47172b0f7b7bd30e860a1","slug":"CTF/pwn/Learn_PWN","date":"2022-01-18T04:51:06.000Z","updated":"2022-01-19T07:57:22.555Z","comments":true,"path":"api/articles/CTF/pwn/Learn_PWN.json","keywords":null,"cover":"/img/16.jpg","text":"PWN学习笔记记录一下放大三寒假期间学习PWN的知识 ","link":"","photos":[],"count_time":{"symbolsCount":27,"symbolsTime":"1 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"ret2xx","uid":"e75c21f70c678b134f6a0bde8c339180","slug":"CTF/pwn/ret2xx","date":"2022-01-18T11:55:26.000Z","updated":"2022-01-19T15:57:00.573Z","comments":true,"path":"api/articles/CTF/pwn/ret2xx.json","keywords":null,"cover":"/img/21.jpg","text":" ret2xx什么是ret2xx泛指ret2text，ret2shellcode，ret2syscall，ret2libc，ret2csu，其中ret2是return to的谐音，可以使用利用eip指针的方法来获取权限 ROPReturn Oriented Programming...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"shellcode","uid":"33178a053863ba406bb965eb7a776aab","slug":"CTF/pwn/shellcode","date":"2022-01-18T04:55:28.000Z","updated":"2022-01-19T07:54:48.505Z","comments":true,"path":"api/articles/CTF/pwn/shellcode.json","keywords":null,"cover":"/img/20.jpg","text":" shellcode什么是shellcode软件漏洞利用过程中使用一小段机器代码 启动shell进行交互 可能存在的问题shellcode只允许输入十几个字节 无法调用系统函数(不知道system的地址) 解决触发中断（0x80或者syscall） 如何编写shellcode32...","link":"","photos":[],"count_time":{"symbolsCount":896,"symbolsTime":"1 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"栈溢出基础","uid":"b0e5183f9443ee80e444d03488f07c6f","slug":"CTF/pwn/栈溢出基础","date":"2022-01-18T04:54:11.000Z","updated":"2022-01-19T07:54:37.676Z","comments":true,"path":"api/articles/CTF/pwn/栈溢出基础.json","keywords":null,"cover":"/img/19.jpg","text":" 栈溢出基础C语言函数调用栈栈是程序运行时一块连续的内存区域，用来保存函数运行时的状态信息，包括函数的局部变量等 当发生函数调用时，调用函数(caller)的状态被保存在栈内，被调用函数(callee)的状态被压入调用栈的栈顶 函数调用结束时栈顶的函数(callee)状态被弹出，...","link":"","photos":[],"count_time":{"symbolsCount":781,"symbolsTime":"1 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"栈溢出进阶","uid":"4773296421a8fb9509157a21ee5da267","slug":"CTF/pwn/栈溢出进阶","date":"2022-01-20T01:17:23.000Z","updated":"2022-01-20T01:42:12.634Z","comments":true,"path":"api/articles/CTF/pwn/栈溢出进阶.json","keywords":null,"cover":"/img/23.jpg","text":" 栈溢出进阶stack smash在glibc-2.23可行，后续版本不可行了 在报错时会泄漏出文件名，原码中的__fortify_fail里有个__libc_massgae将命令行输入参数作为调试结果输出了，因此可以用这个命令行的参数进行格式化字符串输出，将我们想要的libc地...","link":"","photos":[],"count_time":{"symbolsCount":326,"symbolsTime":"1 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":6,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN","slug":"CTF-PWN","count":6,"path":"api/tags/CTF-PWN.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}