{"title":"LINECTF","uid":"35f357ea74fbfdaa7e79229f0daaf363","slug":"CTF/WP/LINECTF","date":"2022-03-29T04:14:44.000Z","updated":"2022-03-29T10:21:03.868Z","comments":true,"path":"api/articles/CTF/WP/LINECTF.json","keywords":null,"cover":"/img/37.png","content":"<span id=\"more\"></span>\n\n<h1 id=\"LINECTF复现\"><a href=\"#LINECTF复现\" class=\"headerlink\" title=\"LINECTF复现\"></a>LINECTF复现</h1><h2 id=\"ss-puzzle\"><a href=\"#ss-puzzle\" class=\"headerlink\" title=\"ss_puzzle\"></a>ss_puzzle</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token comment\"># 64 bytes</span>\nFLAG <span class=\"token operator\">=</span> <span class=\"token string\">b'LINECTF{...}'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">^</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\nS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>\nR <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">4</span>\nShare <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">5</span>\n\nS<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Ideally, R should be random stream. (Not hint)</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">:</span><span class=\"token number\">56</span><span class=\"token punctuation\">]</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> FLAG<span class=\"token punctuation\">[</span><span class=\"token number\">56</span><span class=\"token punctuation\">:</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span>\n\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>            <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>            <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>            <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># This share is partially broken.</span>\nShare<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>   <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span>       <span class=\"token operator\">+</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Share1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Share4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Share[1] = b\"%$&gt;*1 '\\x15\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00+\\x07\\x19\\x07:\\r,/\\x02\\x14%\\x1c\\t@H\\x13\"</span>\n<span class=\"token comment\"># Share[4] = b'\\x1d\\x08\\x08\\x1b-\\x1d\\x121\\x0316\\x1e3\\x19\\x06\\x1c\\x06\\x07\\x00\\x1b:\\x0f1\\x1f934)&amp;ug\\x06'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h3><p>一道很简单的异或运算题目，我们已知<code>S[0]</code>是<code>b'LINECTF{'</code>，可以通过<code>S[0]</code>和<code>Share[1][0:8]</code>推出<code>R[0]</code>同理推出整个flag，解密脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">^</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nShare <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\nS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\nR <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Share1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Share4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nS<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">b'LINECTF{'</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nR<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nS<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Share<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"x-factor\"><a href=\"#x-factor\" class=\"headerlink\" title=\"x_factor\"></a>x_factor</h2><h3 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>因为给的是个md描述，我把他转换成代码如下，已知其中m是明文，c是使用RSA签名得到的相应签名，RSA参数为n和e，目标是伪造给定t的签名</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">0xa9e7da28ebecf1f88efe012b8502122d70b167bdcfa11fd24429c23f27f55ee2cc3dcd7f337d0e630985152e114830423bfaf83f4f15d2d05826bf511c343c1b13bef744ff2232fb91416484be4e130a007a9b432225c5ead5a1faf02fa1b1b53d1adc6e62236c798f76695bb59f737d2701fe42f1fbf57385c29de12e79c5b3</span>\ne <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span>\n\nm <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x945d86b04b2e7c7</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x5de2</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0xa16b201cdd42ad70da249</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x6d993121ed46b</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x726fa7a7</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x31e828d97a0874cff</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0x904a515</span> <span class=\"token punctuation\">]</span>\nc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x17bb21949d5a0f590c6126e26dc830b51d52b8d0eb4f2b69494a9f9a637edb1061bec153f0c1d9dd55b1ad0fd4d58c46e2df51d293cdaaf1f74d5eb2f230568304eebb327e30879163790f3f860ca2da53ee0c60c5e1b2c3964dbcf194c27697a830a88d53b6e0ae29c616e4f9826ec91f7d390fb42409593e1815dbe48f7ed4</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x3ea73715787028b52796061fb887a7d36fb1ba1f9734e9fd6cb6188e087da5bfc26c4bfe1b4f0cbfa0d693d4ac0494efa58888e8415964c124f7ef293a8ee2bc403cad6e9a201cdd442c102b30009a3b63fa61cdd7b31ce9da03507901b49a654e4bb2b03979aea0fab3731d4e564c3c30c75aa1d079594723b60248d9bdde50</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x9444e3fc71056d25489e5ce78c6c986c029f12b61f4f4b5cbd4a0ce6b999919d12c8872b8f2a8a7e91bd0f263a4ead8f2aa4f7e9fdb9096c2ea11f693f6aa73d6b9d5e351617d6f95849f9c73edabd6a6fde6cc2e4559e67b0e4a2ea8d6897b32675be6fc72a6172fd42a8a8e96adfc2b899015b73ff80d09c35909be0a6e13a</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x2b7a1c4a1a9e9f9179ab7b05dd9e0089695f895864b52c73bfbc37af3008e5c187518b56b9e819cc2f9dfdffdfb86b7cc44222b66d3ea49db72c72eb50377c8e6eb6f6cbf62efab760e4a697cbfdcdc47d1adc183cc790d2e86490da0705717e5908ad1af85c58c9429e15ea7c83ccf7d86048571d50bd721e5b3a0912bed7c</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0xa7d5548d5e4339176a54ae1b3832d328e7c512be5252dabd05afa28cd92c7932b7d1c582dc26a0ce4f06b1e96814ee362ed475ddaf30dd37af0022441b36f08ec8c7c4135d6174167a43fa34f587abf806a4820e4f74708624518044f272e3e1215404e65b0219d42a706e5c295b9bf0ee8b7b7f9b6a75d76be64cf7c27dfaeb</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x67832c41a913bcc79631780088784e46402a0a0820826e648d84f9cc14ac99f7d8c10cf48a6774388daabcc0546d4e1e8e345ee7fc60b249d95d953ad4d923ca3ac96492ba71c9085d40753cab256948d61aeee96e0fe6c9a0134b807734a32f26430b325df7b6c9f8ba445e7152c2bf86b4dfd4293a53a8d6f003bf8cf5dffd</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x927a6ecd74bb7c7829741d290bc4a1fd844fa384ae3503b487ed51dbf9f79308bb11238f2ac389f8290e5bcebb0a4b9e09eda084f27add7b1995eeda57eb043deee72bfef97c3f90171b7b91785c2629ac9c31cbdcb25d081b8a1abc4d98c4a1fd9f074b583b5298b2b6cc38ca0832c2174c96f2c629afe74949d97918cbee4a</span><span class=\"token punctuation\">]</span>\nt <span class=\"token operator\">=</span> <span class=\"token number\">0x686178656c696f6e</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"题解-1\"><a href=\"#题解-1\" class=\"headerlink\" title=\"题解\"></a>题解</h3><p>首先可以把几个明文和t都给分解一下，看看几者的关系，我们只需要用明文m表示出t即可（注意只能用乘除表示，不能含有gcd，因为gcd的性质会在签名时被破坏，只有乘除运算可以保持）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#0 668178073886320583  =  811 * 947^3 * 970111</span>\n<span class=\"token comment\">#1 24034  =  2 * 61 * 197</span>\n<span class=\"token comment\">#2 12196433909207788967273033  =  970111 * 2098711^2 * 2854343</span>\n<span class=\"token comment\">#3 1928075547694187  =  947 * 970111 * 2098711</span>\n<span class=\"token comment\">#4 1919920039  =  61 * 197^2 * 811</span>\n<span class=\"token comment\">#5 57538707471611677951  =  2098711 * 2854343 * 9605087</span>\n<span class=\"token comment\">#6 151299349  =  197 * 811 * 947</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最后脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">//</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># m[1]*m[6]//m[4] = 2 * 947</span>\n\nt <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">197</span> <span class=\"token operator\">*</span> <span class=\"token number\">947</span> <span class=\"token operator\">*</span> <span class=\"token number\">2098711</span> <span class=\"token operator\">*</span> <span class=\"token number\">9605087</span><span class=\"token comment\"># = m[1]*m[6]//m[4] *197 * 2098711 * 9605087</span>\n\n<span class=\"token comment\"># m5 * m3 / m2 =    9605087 * 947</span>\n<span class=\"token comment\"># m6^2 * m3 * m1 /(m0 * m4) =  2098711* 2 * 197</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> t<span class=\"token punctuation\">)</span>\nnew_c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> inverse<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>new_c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"forward-or\"><a href=\"#forward-or\" class=\"headerlink\" title=\"forward_or\"></a>forward_or</h2><h3 id=\"题目-2\"><a href=\"#题目-2\" class=\"headerlink\" title=\"题目\"></a>题目</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Present</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>rounds<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Create a PRESENT cipher object\n\n        key:    the key as a 128-bit or 80-bit rawstring\n        rounds: the number of rounds as an integer, 32 by default\n        \"\"\"</span>\n        self<span class=\"token punctuation\">.</span>rounds <span class=\"token operator\">=</span> rounds\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">==</span> <span class=\"token number\">80</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>roundkeys <span class=\"token operator\">=</span> generateRoundkeys80<span class=\"token punctuation\">(</span>byte2number<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>rounds<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">==</span> <span class=\"token number\">128</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>roundkeys <span class=\"token operator\">=</span> generateRoundkeys128<span class=\"token punctuation\">(</span>byte2number<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>rounds<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> <span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Key must be a 128-bit or 80-bit rawstring\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Encrypt 1 block (8 bytes)\n\n        Input:  plaintext block as raw string\n        Output: ciphertext block as raw string\n        \"\"\"</span>\n        state <span class=\"token operator\">=</span> byte2number<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rounds<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            state <span class=\"token operator\">=</span> addRoundKey<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>roundkeys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            state <span class=\"token operator\">=</span> sBoxLayer<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n            state <span class=\"token operator\">=</span> pLayer<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n        cipher <span class=\"token operator\">=</span> addRoundKey<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>roundkeys<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> number2byte_N<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Decrypt 1 block (8 bytes)\n\n        Input:  ciphertext block as raw string\n        Output: plaintext block as raw string\n        \"\"\"</span>\n        state <span class=\"token operator\">=</span> byte2number<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>rounds<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            state <span class=\"token operator\">=</span> addRoundKey<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>roundkeys<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            state <span class=\"token operator\">=</span> pLayer_dec<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n            state <span class=\"token operator\">=</span> sBoxLayer_dec<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n        decipher <span class=\"token operator\">=</span> addRoundKey<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>roundkeys<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> number2byte_N<span class=\"token punctuation\">(</span>decipher<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_block_size</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">8</span>\n\n<span class=\"token comment\">#    0   1   2   3   4   5   6   7   8   9   a   b   c   d   e   f</span>\nSbox<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xb</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x2</span><span class=\"token punctuation\">]</span>\nSbox_inv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Sbox<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nPBox <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">38</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">61</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span><span class=\"token number\">63</span><span class=\"token punctuation\">]</span>\nPBox_inv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>PBox<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generateRoundkeys80</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Generate the roundkeys for a 80-bit key\n\n    Input:\n        key:    the key as a 80-bit integer\n        rounds: the number of rounds as an integer\n    Output: list of 64-bit roundkeys as integers\"\"\"</span>\n    roundkeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>rounds<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># (K1 ... K32)</span>\n        <span class=\"token comment\"># rawkey: used in comments to show what happens at bitlevel</span>\n        <span class=\"token comment\"># rawKey[0:64]</span>\n        roundkeys<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;&gt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#1. Shift</span>\n        <span class=\"token comment\">#rawKey[19:len(rawKey)]+rawKey[0:19]</span>\n        key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">19</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">61</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#2. SBox</span>\n        <span class=\"token comment\">#rawKey[76:80] = S(rawKey[76:80])</span>\n        key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Sbox<span class=\"token punctuation\">[</span>key <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">76</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">76</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#3. Salt</span>\n        <span class=\"token comment\">#rawKey[15:20] ^ i</span>\n        key <span class=\"token operator\">^</span><span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">15</span>\n    <span class=\"token keyword\">return</span> roundkeys\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">generateRoundkeys128</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Generate the roundkeys for a 128-bit key\n\n    Input:\n        key:    the key as a 128-bit integer\n        rounds: the number of rounds as an integer\n    Output: list of 64-bit roundkeys as integers\"\"\"</span>\n    roundkeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>rounds<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># (K1 ... K32)</span>\n        <span class=\"token comment\"># rawkey: used in comments to show what happens at bitlevel</span>\n        roundkeys<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;&gt;</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#1. Shift</span>\n        key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">67</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">61</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#2. SBox</span>\n        key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Sbox<span class=\"token punctuation\">[</span>key <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">124</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">124</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>Sbox<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">120</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#3. Salt</span>\n        <span class=\"token comment\">#rawKey[62:67] ^ i</span>\n        key <span class=\"token operator\">^</span><span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">62</span>\n    <span class=\"token keyword\">return</span> roundkeys\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">addRoundKey</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>roundkey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> state <span class=\"token operator\">^</span> roundkey\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sBoxLayer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"SBox function for encryption\n\n    Input:  64-bit integer\n    Output: 64-bit integer\"\"\"</span>\n\n    output <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        output <span class=\"token operator\">+=</span> Sbox<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span> state <span class=\"token operator\">&gt;&gt;</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> output\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sBoxLayer_dec</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Inverse SBox function for decryption\n\n    Input:  64-bit integer\n    Output: 64-bit integer\"\"\"</span>\n    output <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        output <span class=\"token operator\">+=</span> Sbox_inv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span> state <span class=\"token operator\">&gt;&gt;</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> output\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">pLayer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Permutation layer for encryption\n\n    Input:  64-bit integer\n    Output: 64-bit integer\"\"\"</span>\n    output <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        output <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">&gt;&gt;</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> PBox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> output\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">pLayer_dec</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Permutation layer for decryption\n\n    Input:  64-bit integer\n    Output: 64-bit integer\"\"\"</span>\n    output <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        output <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">&gt;&gt;</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> PBox_inv<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> output\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">byte2number</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Convert a string to a number\n\n    Input: byte (big-endian)\n    Output: long or integer\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">.</span>from_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">number2byte_N</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Convert a number to a string of fixed size\n\n    i: long or integer\n    N: length of byte\n    Output: string (big-endian)\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> byteorder<span class=\"token operator\">=</span><span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">_test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> doctest\n    doctest<span class=\"token punctuation\">.</span>testmod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    _test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> present <span class=\"token keyword\">import</span> Present\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>strxor <span class=\"token keyword\">import</span> strxor\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span> re\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CTRMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> nonce<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> key <span class=\"token comment\"># 20bytes</span>\n        self<span class=\"token punctuation\">.</span>cipher <span class=\"token operator\">=</span> DoubleRoundReducedPresent<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token boolean\">None</span><span class=\"token operator\">==</span>nonce<span class=\"token punctuation\">:</span>\n            nonce <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>block_size<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>nonce <span class=\"token operator\">=</span> nonce <span class=\"token comment\"># 4bytes</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">XorStream</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        output <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\n        counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            keystream <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>nonce<span class=\"token operator\">+</span>counter<span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>block_size<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token string\">b\"\"</span><span class=\"token operator\">==</span>keystream<span class=\"token punctuation\">:</span>\n                exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>i<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">:</span>\n                block <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n            block <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>cipher<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">]</span>\n            block <span class=\"token operator\">=</span> strxor<span class=\"token punctuation\">(</span>keystream<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">)</span>\n            \n            output<span class=\"token operator\">+=</span>block\n            counter<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> output\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>XorStream<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>XorStream<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DoubleRoundReducedPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>block_size <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n        self<span class=\"token punctuation\">.</span>key_length <span class=\"token operator\">=</span> <span class=\"token number\">160</span> <span class=\"token comment\"># bits</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span> <span class=\"token operator\">=</span> <span class=\"token number\">16</span>\n        self<span class=\"token punctuation\">.</span>cipher0 <span class=\"token operator\">=</span> Present<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>cipher1 <span class=\"token operator\">=</span> Present<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>self<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Plaintext must be less than %d bytes per block\"</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">b\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cipher1<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>cipher0<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>self<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Ciphertext must be less than %d bytes per block\"</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">b\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>cipher0<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>cipher1<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> os\n    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./secret/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">from</span> keyfile <span class=\"token keyword\">import</span> key\n    <span class=\"token keyword\">from</span> flag <span class=\"token keyword\">import</span> flag\n\n    <span class=\"token comment\"># load key</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> re<span class=\"token punctuation\">.</span>fullmatch<span class=\"token punctuation\">(</span><span class=\"token string\">r'[0-3]+'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># load flag</span>\n    flag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># LINECTF{...}</span>\n\n    plain <span class=\"token operator\">=</span> flag\n    cipher <span class=\"token operator\">=</span> CTRMode<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    ciphertext <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>plain<span class=\"token punctuation\">)</span>\n    nonce <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>nonce\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nonce<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ciphertext_hex=\"3201339d0fcffbd152f169ddcb8349647d8bc36a73abc4d981d3206f4b1d98468995b9b1c15dc0f0\"</span>\n<span class=\"token comment\"># nonce_hex=\"32e10325\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"题解-2\"><a href=\"#题解-2\" class=\"headerlink\" title=\"题解\"></a>题解</h3><p>用的CTR模式和一个分组密码Present，本文代码对Present变形成了一个二轮的分组密码，但是这个二轮就导致了中间相遇攻击，就像二轮DES中间相遇攻击一样，对密文爆破Key2进行解密，对明文爆破Key1进行加密，将二者比对，找到相同的内容，爆破出Key1和Key2，exp如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product\n<span class=\"token keyword\">from</span> ptrlib <span class=\"token keyword\">import</span> xor\n<span class=\"token keyword\">from</span> present <span class=\"token keyword\">import</span> Present\n<span class=\"token keyword\">from</span> main <span class=\"token keyword\">import</span> CTRMode\n\nciphertext_hex<span class=\"token operator\">=</span><span class=\"token string\">\"3201339d0fcffbd152f169ddcb8349647d8bc36a73abc4d981d3206f4b1d98468995b9b1c15dc0f0\"</span>\nnonce_hex<span class=\"token operator\">=</span><span class=\"token string\">\"32e10325\"</span>\nciphertext <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>ciphertext_hex<span class=\"token punctuation\">)</span>\nnonce <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>nonce_hex<span class=\"token punctuation\">)</span>\n\ncipher1 <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span><span class=\"token string\">b'LINECTF{'</span><span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span>\nplaint <span class=\"token operator\">=</span> nonce <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span>\nkey <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">(</span><span class=\"token string\">'0123'</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tk <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tcipher <span class=\"token operator\">=</span> Present<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\tkey<span class=\"token punctuation\">[</span>cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>plaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> k\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[OK]forward finished'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">(</span><span class=\"token string\">'0123'</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tk <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tcipher <span class=\"token operator\">=</span> Present<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>cipher1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> key<span class=\"token punctuation\">:</span>\n\t\tkeyy <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span>cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>cipher1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> k\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>cipher1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[OK]found the key'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">break</span>\n\nkeyy <span class=\"token operator\">=</span> <span class=\"token string\">b'32013230202123003302'</span>\nctr <span class=\"token operator\">=</span> CTRMode<span class=\"token punctuation\">(</span>keyy<span class=\"token punctuation\">,</span> nonce<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ctr<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","feature":true,"text":" LINECTF复现ss_puzzle题目#!/usr/bin/env python # -*- coding: utf-8 -*- # 64 bytes FLAG = b'LINECTF{...}' def xor(a:bytes, b:bytes) -&gt; bytes: ...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"WP","slug":"WP","count":3,"path":"api/categories/WP.json"}],"tags":[{"name":"WP LINECTF","slug":"WP-LINECTF","count":1,"path":"api/tags/WP-LINECTF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#LINECTF%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">LINECTF复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ss-puzzle\"><span class=\"toc-text\">ss_puzzle</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3\"><span class=\"toc-text\">题解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#x-factor\"><span class=\"toc-text\">x_factor</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE-1\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-1\"><span class=\"toc-text\">题解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#forward-or\"><span class=\"toc-text\">forward_or</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE-2\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3-2\"><span class=\"toc-text\">题解</span></a></li></ol></li></ol></li></ol>","author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"zer0ptsWP","uid":"4e0d501b6d8004c9448da7812fda61ec","slug":"CTF/WP/zer0ptsWP","date":"2022-03-22T13:29:55.000Z","updated":"2022-03-22T13:49:20.875Z","comments":true,"path":"api/articles/CTF/WP/zer0ptsWP.json","keywords":null,"cover":"/img/36.jpg","text":" zer0pts题目复现先写两道密码一道web，另外两道密码还没看懂….等看懂了在写 Anti-Fermat题目如下 from Crypto.Util.number import isPrime, getStrongPrime from gmpy import next_prim...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"WP","slug":"WP","count":3,"path":"api/categories/WP.json"}],"tags":[{"name":"WP zer0ptsCTF","slug":"WP-zer0ptsCTF","count":1,"path":"api/tags/WP-zer0ptsCTF.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}