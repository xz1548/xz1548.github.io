{"title":"随机数之LCG","uid":"03ede3be90a360cf1806307a54bd7512","slug":"CTF/crypto/随机数之LCG","date":"2022-01-23T07:02:13.000Z","updated":"2022-01-23T08:05:52.802Z","comments":true,"path":"api/articles/CTF/crypto/随机数之LCG.json","keywords":null,"cover":"/img/26.jpg","content":"<span id=\"more\"></span>\n\n<h1 id=\"随机数之LCG\"><a href=\"#随机数之LCG\" class=\"headerlink\" title=\"随机数之LCG\"></a>随机数之LCG</h1><p>上课的时候好像学过LCG这个东西，但是遇到的时候想都想不起来..所以还是写点东西记下来</p>\n<h2 id=\"定义和推广\"><a href=\"#定义和推广\" class=\"headerlink\" title=\"定义和推广\"></a>定义和推广</h2><p>线性同余法(LCG)是一种伪随机数生成的方法，生成方法如下<br>$$<br>X_{n+1}=aX_n+b\\mod m<br>$$<br>其中定义了三个整数，乘数a、增量b、模数m</p>\n<h3 id=\"推广公式\"><a href=\"#推广公式\" class=\"headerlink\" title=\"推广公式\"></a>推广公式</h3><p>根据定义推出三个数的求法如下<br>$$<br>\\begin{align}<br>&amp;X_n\\equiv a^{-1}(X_{n+1}-b)\\mod m\\<br>&amp;a\\equiv (X_{n+2}-X_{n+1})(X_{n+1}-X_{n})^{-1}\\mod m\\<br>&amp;b\\equiv X_{n+1}-aX_{n}\\mod m<br>\\end{align}<br>$$<br>另一个很重要的公式单独列出来<br>$$<br>\\begin{align}<br>设&amp;t_n\\equiv X_{n+1}-X_{n}\\<br>有&amp;t_n\\equiv at_{n-1}\\mod m\\<br>&amp;t_{n+1}t_{n-1}-t_nt_n=(aat_{n-1}t_{n-1}-at_{n-1}at_{n-1})\\equiv 0\\mod m\\<br>即&amp;m=gcd((t_{n+1}t_{n-1}),(t_nt_{n-2}-t_{n-1}t_{n-1}))<br>\\end{align}<br>$$</p>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p>给出一个例题如下，求出乘数A、增量B、模数q</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s0 <span class=\"token operator\">=</span> <span class=\"token number\">543263588863771657634119</span>\ns1 <span class=\"token operator\">=</span> <span class=\"token number\">628899245716105951093835</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token number\">78708024695487418261582</span>\ns3 <span class=\"token operator\">=</span> <span class=\"token number\">598971435111109998816796</span>\ns4 <span class=\"token operator\">=</span> <span class=\"token number\">789474285039501272453373</span>\n\n<span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span> A <span class=\"token operator\">*</span> s0 <span class=\"token operator\">+</span> B <span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q <span class=\"token operator\">==</span> s1\n<span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span> A <span class=\"token operator\">*</span> s1 <span class=\"token operator\">+</span> B <span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q <span class=\"token operator\">==</span> s2\n<span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span> A <span class=\"token operator\">*</span> s2 <span class=\"token operator\">+</span> B <span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q <span class=\"token operator\">==</span> s3\n<span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span> A <span class=\"token operator\">*</span> s3 <span class=\"token operator\">+</span> B <span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q <span class=\"token operator\">==</span> s4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解题脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> a \n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> gcd<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>a<span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span> \ns <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">543263588863771657634119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">628899245716105951093835</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78708024695487418261582</span><span class=\"token punctuation\">,</span> <span class=\"token number\">598971435111109998816796</span><span class=\"token punctuation\">,</span> <span class=\"token number\">789474285039501272453373</span><span class=\"token punctuation\">]</span>\nt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    t<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \nall_n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    all_n<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>gcd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>t<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>t<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>t<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\nMMI <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> A<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span>s<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>N<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token keyword\">and</span> t<span class=\"token operator\">%</span>N <span class=\"token keyword\">or</span> MMI<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> A<span class=\"token operator\">%</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> s<span class=\"token operator\">-</span>A<span class=\"token operator\">//</span>n<span class=\"token operator\">*</span>t<span class=\"token punctuation\">,</span> N <span class=\"token keyword\">or</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>n<span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#逆元计算</span>\n<span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> all_n<span class=\"token punctuation\">:</span>\n    n<span class=\"token operator\">=</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> n<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>MMI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\n    ani<span class=\"token operator\">=</span>MMI<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n    b<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>a<span class=\"token operator\">*</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":true,"text":" 随机数之LCG上课的时候好像学过LCG这个东西，但是遇到的时候想都想不起来..所以还是写点东西记下来 定义和推广线性同余法(LCG)是一种伪随机数生成的方法，生成方法如下$$X_{n+1}=aX_n+b\\mod m$$其中定义了三个整数，乘数a、增量b、模数m 推广公式根据定义...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CTF/CRYPTO","slug":"CTF-CRYPTO","count":1,"path":"api/categories/CTF-CRYPTO.json"}],"tags":[{"name":"CTF CRYPTO","slug":"CTF-CRYPTO","count":1,"path":"api/tags/CTF-CRYPTO.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%9A%8F%E6%9C%BA%E6%95%B0%E4%B9%8BLCG\"><span class=\"toc-text\">随机数之LCG</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E5%92%8C%E6%8E%A8%E5%B9%BF\"><span class=\"toc-text\">定义和推广</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E5%B9%BF%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">推广公式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li></ol></li></ol>","author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"DNS隧道文献调研","uid":"31531518f5b44460dcc99773a48a9a22","slug":"Research/Paper/DNS隧道文献调研","date":"2022-01-22T03:50:03.000Z","updated":"2022-01-22T03:51:34.761Z","comments":true,"path":"api/articles/Research/Paper/DNS隧道文献调研.json","keywords":null,"cover":"/img/25.jpg","text":" DNS隧道文献调研前两天学习了点DNS隧道的知识，这两天就调研了一下DNS隧道的检测相关手段，主要涉及人工智能和流量检测的 低速DNS隐蔽信道通信检测研究与实现研究现状检测思路主要分为两类 基于通信过程特征：深度学习（基于字节的卷积神经网络，基于长短期记忆的循环神经网络，Sta...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Research/Paper","slug":"Research-Paper","count":1,"path":"api/categories/Research-Paper.json"}],"tags":[{"name":"Research Paper","slug":"Research-Paper","count":1,"path":"api/tags/Research-Paper.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}