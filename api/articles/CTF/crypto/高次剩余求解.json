{"title":"高次剩余求解","uid":"0f98a03e2be0fa66aad63599b5ae90ad","slug":"CTF/crypto/高次剩余求解","date":"2022-01-23T10:05:35.000Z","updated":"2022-02-26T02:28:45.378Z","comments":true,"path":"api/articles/CTF/crypto/高次剩余求解.json","keywords":null,"cover":"/img/28.jpg","content":"<span id=\"more\"></span>\n\n<h1 id=\"高次剩余求解\"><a href=\"#高次剩余求解\" class=\"headerlink\" title=\"高次剩余求解\"></a>高次剩余求解</h1><p>最近遇到了一个新的高次剩余求解的题目，学到了一个叫AMM的算法来求解，记录一下，顺便回头有空了补一下二次剩余的(挖坑ing)，已经忘了差不多了</p>\n<p>推导过程懒得看了，直接贴上论文的求解过程</p>\n<p><img src=\"/img/%E9%AB%98%E6%AC%A1%E5%89%A9%E4%BD%99%E6%B1%82%E8%A7%A3_img/image-20220123202932130.png\" alt=\"image-20220123202932130\"></p>\n<p>然后求解代码如下(代码来自智慧与美貌并存的好哥哥曲映曦师傅)，其中x是<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.023ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.005ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -717 444 727\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D6FF\" d=\"M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z\"></path></g></g></g></svg></mjx-container>，e是r，p是q，能求解<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.439ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.308ex\" height=\"2.061ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -717 6766 911\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><path data-c=\"1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(936.2,363) scale(0.707)\"><path data-c=\"1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(1582.9,0)\"><path data-c=\"2261\" d=\"M56 444Q56 457 70 464H707Q722 456 722 444Q722 430 706 424H72Q56 429 56 444ZM56 237T56 250T70 270H707Q722 262 722 250T707 230H70Q56 237 56 250ZM56 56Q56 71 72 76H706Q722 70 722 56Q722 44 707 36H70Q56 43 56 56Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2638.7,0)\"><path data-c=\"1D6FF\" d=\"M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z\"></path></g><g data-mml-node=\"mspace\" transform=\"translate(3082.7,0)\"></g><g data-mml-node=\"mi\" transform=\"translate(3916.3,0)\"><path data-c=\"6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path data-c=\"6F\" d=\"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z\" transform=\"translate(833,0)\"></path><path data-c=\"64\" d=\"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z\" transform=\"translate(1333,0)\"></path></g><g data-mml-node=\"mstyle\" transform=\"translate(5805.3,0)\"><g data-mml-node=\"mspace\"></g></g><g data-mml-node=\"mstyle\" transform=\"translate(5972.3,0)\"><g data-mml-node=\"mspace\"></g></g><g data-mml-node=\"mi\" transform=\"translate(6306,0)\"><path data-c=\"1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path></g></g></g></svg></mjx-container></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> math\n<span class=\"token keyword\">import</span> libnum\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long<span class=\"token punctuation\">,</span>long_to_bytes\np <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">GF</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    p <span class=\"token operator\">=</span> a\n<span class=\"token keyword\">def</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">AMM</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n    y <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> g<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        y <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"find\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#p-1 = e^t*s</span>\n    t <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    s <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> p <span class=\"token operator\">%</span> e <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        t <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n    s <span class=\"token operator\">=</span> p <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">**</span>t<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print('e',e)</span>\n    <span class=\"token comment\"># print('p',p)</span>\n    <span class=\"token comment\"># print('s',s)</span>\n    <span class=\"token comment\"># print('t',t)</span>\n    <span class=\"token comment\"># s|ralpha-1</span>\n    k <span class=\"token operator\">=</span> <span class=\"token number\">1</span>    \n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> e <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    alpha <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> e\n   \n    a <span class=\"token operator\">=</span> g<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> g<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> e <span class=\"token operator\">*</span> alpha <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    c <span class=\"token operator\">=</span> g<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n    h <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cur_i'</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n        d <span class=\"token operator\">=</span> g<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>e<span class=\"token operator\">**</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> d <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>math<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> e<span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        h <span class=\"token operator\">=</span> h <span class=\"token operator\">*</span> g<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n        c <span class=\"token operator\">=</span> g<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>alpha <span class=\"token operator\">*</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":" 高次剩余求解最近遇到了一个新的高次剩余求解的题目，学到了一个叫AMM的算法来求解，记录一下，顺便回头有空了补一下二次剩余的(挖坑ing)，已经忘了差不多了 推导过程懒得看了，直接贴上论文的求解过程 然后求解代码如下(代码来自智慧与美貌并存的好哥哥曲映曦师傅)，其中x是，e是r，...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"CTF/CRYPTO","slug":"CTF-CRYPTO","count":4,"path":"api/categories/CTF-CRYPTO.json"}],"tags":[{"name":"CTF CRYPTO","slug":"CTF-CRYPTO","count":4,"path":"api/tags/CTF-CRYPTO.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%AB%98%E6%AC%A1%E5%89%A9%E4%BD%99%E6%B1%82%E8%A7%A3\"><span class=\"toc-text\">高次剩余求解</span></a></li></ol>","author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"二进制","uid":"55fb07a4dbf6f44614d26c9d54b2e72f","slug":"HWS/2020/二进制","date":"2022-02-02T11:23:08.000Z","updated":"2022-02-04T01:09:53.767Z","comments":true,"path":"api/articles/HWS/2020/二进制.json","keywords":null,"cover":"/img/29.jpg","text":"写在前面HWS运气好打进了线下，就补习一下前两年的夏令营知识，刚好用来入门RE和PWN，本分类就用于记一些笔记 另外下面的逆向工程这一块没什么用全是misc入门知识，但是既然写了也懒得删，就留着吧 加密与解密流密码随机数预测爆破知道随机数产生的内容，预测次数比较少，精度比较低，可...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"HWS/2020","slug":"HWS-2020","count":2,"path":"api/categories/HWS-2020.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Hexo主题数学公式渲染","uid":"6cbb80cb79ca010921d708bc73e8460f","slug":"blog/Hexo主题数学公式渲染","date":"2022-01-23T08:21:01.000Z","updated":"2022-01-23T08:26:03.675Z","comments":true,"path":"api/articles/blog/Hexo主题数学公式渲染.json","keywords":null,"cover":"/img/27.jpg","text":" Hexo主题数学公式渲染之前搭博客的时候内嵌数学公式一直没渲染出来，一大堆$$符号放着十分的呆，很多博客让卸了装好多包最后也没解决，这次放一下我的解决办法 首先hexo的框架应该都是支持mathjax的，只不过不同主题开启方式不同 首先需要安装majax插件 npm insta...","link":"","photos":[],"count_time":{"symbolsCount":214,"symbolsTime":"1 mins."},"categories":[{"name":"BLOG","slug":"BLOG","count":1,"path":"api/categories/BLOG.json"}],"tags":[{"name":"BLOG","slug":"BLOG","count":1,"path":"api/tags/BLOG.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}