{"title":"蓝牙入门","uid":"d3bfb8de020bc95d183e323a3821cb2a","slug":"HWS/2021/蓝牙入门","date":"2022-02-06T02:18:19.000Z","updated":"2022-02-11T13:38:16.288Z","comments":true,"path":"api/articles/HWS/2021/蓝牙入门.json","keywords":null,"cover":"/img/3.jpg","content":"<span id=\"more\"></span>\n\n<h1 id=\"蓝牙协议\"><a href=\"#蓝牙协议\" class=\"headerlink\" title=\"蓝牙协议\"></a>蓝牙协议</h1><h2 id=\"认识蓝牙\"><a href=\"#认识蓝牙\" class=\"headerlink\" title=\"认识蓝牙\"></a>认识蓝牙</h2><p>蓝牙有两种协议BLE和经典协议，pwntools里有check_crc的工具，报文结构如下</p>\n<p><img src=\"/img/%E8%93%9D%E7%89%99%E5%85%A5%E9%97%A8_img/image-20220206102840651.png\" alt=\"image-20220206102840651\"></p>\n<p>解码代码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nrawbit <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token comment\"># 报文二进制</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_all</span><span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tindex_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\tindex <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">while</span> index <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t\tindex_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n\t\tindex <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">,</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>index_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> index_list\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_hex</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    c<span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        c <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_ble_package</span><span class=\"token punctuation\">(</span>pre<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    index <span class=\"token operator\">=</span> find_all<span class=\"token punctuation\">(</span>pre<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> index<span class=\"token punctuation\">:</span>\n        prehead <span class=\"token operator\">=</span> print_hex<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        head <span class=\"token operator\">=</span> print_hex<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">40</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        l <span class=\"token operator\">=</span> print_hex<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">48</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">56</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        l0 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span> <span class=\"token punctuation\">;</span> l1 <span class=\"token operator\">=</span> l0<span class=\"token operator\">*</span><span class=\"token number\">8</span>\n        d <span class=\"token operator\">=</span> print_hex<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">56</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">56</span><span class=\"token operator\">+</span>l1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        crc <span class=\"token operator\">=</span> print_hex<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">56</span><span class=\"token operator\">+</span>l1<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">56</span><span class=\"token operator\">+</span>l1<span class=\"token operator\">+</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        crc_data <span class=\"token operator\">=</span> head <span class=\"token operator\">+</span> l <span class=\"token operator\">+</span> d\n        check_crc <span class=\"token operator\">=</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>pwnlib<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>crc<span class=\"token punctuation\">.</span>crc_24_ble<span class=\"token punctuation\">(</span>crc_data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>check_crc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> crc<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"--------------------------------------------\"</span>\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"package  : \"</span> <span class=\"token operator\">+</span> prehead <span class=\"token operator\">+</span> head <span class=\"token operator\">+</span> l <span class=\"token operator\">+</span> d <span class=\"token operator\">+</span> crc\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"head     : \"</span> <span class=\"token operator\">+</span> prehead\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"PDU head : \"</span> <span class=\"token operator\">+</span> head\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"PDU len  : \"</span> <span class=\"token operator\">+</span> l\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"PDU data : \"</span> <span class=\"token operator\">+</span> d\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"crc      : \"</span> <span class=\"token operator\">+</span> crc\n            <span class=\"token keyword\">print</span> <span class=\"token string\">\"crc_check: \"</span><span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>check_crc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\"--------------------------------------------\"</span>\n\nfind_ble_package<span class=\"token punctuation\">(</span><span class=\"token string\">'01010101'</span><span class=\"token punctuation\">,</span>rawbit<span class=\"token punctuation\">)</span>\nfind_ble_package<span class=\"token punctuation\">(</span><span class=\"token string\">'10101010'</span><span class=\"token punctuation\">,</span>rawbit<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"三种实现架构\"><a href=\"#三种实现架构\" class=\"headerlink\" title=\"三种实现架构\"></a>三种实现架构</h3><p>应用处理器host、蓝牙控制器controller</p>\n<ul>\n<li>host+controller双芯片架构（多用于电脑手机）：通过芯片实现controller，用HCI协议与Host交互</li>\n<li>单芯片整体方案SoC（多用于低成本控制器）：Host+Controller封装到一个芯片上</li>\n<li>自定义双芯片架构（多用于学习物联网开发）：应用处理器app+蓝牙模组（host+controller）</li>\n</ul>\n<h3 id=\"蓝牙收发包\"><a href=\"#蓝牙收发包\" class=\"headerlink\" title=\"蓝牙收发包\"></a>蓝牙收发包</h3><table>\n<thead>\n<tr>\n<th>攻击机</th>\n<th>蓝牙设备</th>\n<th>协议栈</th>\n<th>原生API</th>\n<th>顶层工具</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>linux PC</td>\n<td>PC蓝牙controller</td>\n<td>bluez</td>\n<td>D-Bus API、C socket API</td>\n<td>bluez tools、Scapy、pybluez、bluepy、pygatt、bluescan</td>\n</tr>\n<tr>\n<td>Android</td>\n<td>手机蓝牙controller</td>\n<td>Fluoride</td>\n<td>java API</td>\n<td>nRF connect</td>\n</tr>\n<tr>\n<td>iPhone</td>\n<td>手机蓝牙controller</td>\n<td>私有</td>\n<td>Objective-C API</td>\n<td>nRF connect</td>\n</tr>\n</tbody></table>\n<h3 id=\"抓包\"><a href=\"#抓包\" class=\"headerlink\" title=\"抓包\"></a>抓包</h3><p>Ubertooth、nRF52832、cc2540、hollong、HCI接口、HCllog</p>\n<h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p><a href=\"https://github.com/hackgnar/ble_ctf\">https://github.com/hackgnar/ble_ctf</a> 板子可以用ESP32-DevKitC乐鑫</p>\n<h1 id=\"linux内核\"><a href=\"#linux内核\" class=\"headerlink\" title=\"linux内核\"></a>linux内核</h1><p><a href=\"https://github.com/xuanxuanblingbling/linux_kernel_module_exercise\">https://github.com/xuanxuanblingbling/linux_kernel_module_exercise</a></p>\n<h1 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h1><p><a href=\"https://blog.csdn.net/zwc1725\">https://blog.csdn.net/zwc1725</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/37725574\">https://zhuanlan.zhihu.com/p/37725574</a></p>\n","text":" 蓝牙协议认识蓝牙蓝牙有两种协议BLE和经典协议，pwntools里有check_crc的工具，报文结构如下 解码代码 from pwn import * rawbit = \"\"# 报文二进制 def find_all(sub,s): index_list = [] index ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">蓝牙协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A4%E8%AF%86%E8%93%9D%E7%89%99\"><span class=\"toc-text\">认识蓝牙</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">三种实现架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%93%9D%E7%89%99%E6%94%B6%E5%8F%91%E5%8C%85\"><span class=\"toc-text\">蓝牙收发包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%93%E5%8C%85\"><span class=\"toc-text\">抓包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#linux%E5%86%85%E6%A0%B8\"><span class=\"toc-text\">linux内核</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB\"><span class=\"toc-text\">推荐阅读</span></a></li></ol>","author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"pwnable刷题","uid":"728bc0e237c3a4cf5b22aa0f745046c8","slug":"CTF/pwn/pwnable刷题","date":"2022-02-09T09:35:27.000Z","updated":"2022-02-09T10:30:05.163Z","comments":true,"path":"api/articles/CTF/pwn/pwnable刷题.json","keywords":null,"cover":"/img/4.jpg","text":" pwnable刷题记录记录一下pwnable刷题的详细过程 start一道很适合入门的题目，简单的ret2shellcode，从中可以引申出函数调用过程栈的变化。 首先检查一下保护，啥也没开 然后拖到ida里打开就俩函数，一个start一个exit，分析start函数 .tex...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":7,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN pwnable","slug":"CTF-PWN-pwnable","count":1,"path":"api/tags/CTF-PWN-pwnable.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"IoT硬件安全基础","uid":"d59f5c6d4a0d11f67f415ffc1f13370a","slug":"HWS/2021/IoT硬件安全基础","date":"2022-02-05T01:09:27.000Z","updated":"2022-02-05T08:25:24.862Z","comments":true,"path":"api/articles/HWS/2021/IoT硬件安全基础.json","keywords":null,"cover":"/img/2.jpg","text":" IoT介绍 IoT定义：从设备侧来说，是可以联网的嵌入式设备，是一个完整的计算机 嵌入式定义：从计算机角度来说，就是能控制更多种类的外设计算机 固件获取与解包固件固化在设备上的软件，是会被某个CPU执行的代码，一般指Flash中被固化、固定执行的软件（烧到板子上的） 固件获取固...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}