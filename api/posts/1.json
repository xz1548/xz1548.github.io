{"total":26,"pageSize":12,"pageCount":3,"data":[{"title":"数电基础","uid":"0162baa68121de3e2c10c96d5835ca7a","slug":"HWS/2022/数电基础","date":"2022-02-18T13:13:44.000Z","updated":"2022-02-18T13:17:38.410Z","comments":true,"path":"api/articles/HWS/2022/数电基础.json","cover":"/img/6.jpg","text":" 逻辑的代数表示 逻辑运算：与或非、异或、同或 布尔表达式：包含布尔变量和布尔运算的 布尔函数：布尔映射 真值表：一张表把布尔函数的输入输出列出来 基本定律：德摩根律、互补律、消去律、重叠、对偶（01互换，+*互换，等式成立） 格雷码：使得相邻之间的状态转换只有一位数字翻转（为了...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"HWS/2022","slug":"HWS-2022","count":2,"path":"api/categories/HWS-2022.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"硬件接口入门","uid":"2e26753d18f40c4232753f44ace2ff64","slug":"HWS/2022/硬件接口入门","date":"2022-02-16T02:25:41.000Z","updated":"2022-02-16T03:36:48.800Z","comments":true,"path":"api/articles/HWS/2022/硬件接口入门.json","cover":"/img/5.jpg","text":" 硬件接口入门参考：https://demo.hedgedoc.org/s/sHig2ekuQ# UARTUART口是指一种物理接口形式（硬件接口） UART是异步，全双工串口总线。有两根线，一根TXD用于发送，一根RXD用于接收。UART的串行数据传输不需要使用时钟信号来同步传...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"HWS/2022","slug":"HWS-2022","count":2,"path":"api/categories/HWS-2022.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"pwnable刷题","uid":"728bc0e237c3a4cf5b22aa0f745046c8","slug":"CTF/pwn/pwnable刷题","date":"2022-02-09T09:35:27.000Z","updated":"2022-02-09T10:30:05.163Z","comments":true,"path":"api/articles/CTF/pwn/pwnable刷题.json","cover":"/img/4.jpg","text":" pwnable刷题记录记录一下pwnable刷题的详细过程 start一道很适合入门的题目，简单的ret2shellcode，从中可以引申出函数调用过程栈的变化。 首先检查一下保护，啥也没开 然后拖到ida里打开就俩函数，一个start一个exit，分析start函数 .tex...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CTF/PWN","slug":"CTF-PWN","count":7,"path":"api/categories/CTF-PWN.json"}],"tags":[{"name":"CTF PWN pwnable","slug":"CTF-PWN-pwnable","count":1,"path":"api/tags/CTF-PWN-pwnable.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"蓝牙入门","uid":"d3bfb8de020bc95d183e323a3821cb2a","slug":"HWS/2021/蓝牙入门","date":"2022-02-06T02:18:19.000Z","updated":"2022-02-11T13:38:16.288Z","comments":true,"path":"api/articles/HWS/2021/蓝牙入门.json","cover":"/img/3.jpg","text":" 蓝牙协议认识蓝牙蓝牙有两种协议BLE和经典协议，pwntools里有check_crc的工具，报文结构如下 解码代码 from pwn import * rawbit = \"\"# 报文二进制 def find_all(sub,s): index_list = [] index ...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"IoT硬件安全基础","uid":"d59f5c6d4a0d11f67f415ffc1f13370a","slug":"HWS/2021/IoT硬件安全基础","date":"2022-02-05T01:09:27.000Z","updated":"2022-02-05T08:25:24.862Z","comments":true,"path":"api/articles/HWS/2021/IoT硬件安全基础.json","cover":"/img/2.jpg","text":" IoT介绍 IoT定义：从设备侧来说，是可以联网的嵌入式设备，是一个完整的计算机 嵌入式定义：从计算机角度来说，就是能控制更多种类的外设计算机 固件获取与解包固件固化在设备上的软件，是会被某个CPU执行的代码，一般指Flash中被固化、固定执行的软件（烧到板子上的） 固件获取固...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PWN","uid":"5fc856885126d17b63352c1a2dc49ef9","slug":"HWS/2021/PWN","date":"2022-02-04T07:03:52.000Z","updated":"2022-02-04T07:37:21.565Z","comments":true,"path":"api/articles/HWS/2021/PWN.json","cover":"/img/34.jpg","text":" PWN题目中直呼精彩的利用手法程序没有leak时的利用技巧 例题：Magic Gadget ret2csuret2libsyscallpartial overwrite覆盖低位字节，达到不需要leak也可以修改目标值，可能存在一定爆破 通过House of Husk 入门IO_...","link":"","photos":[],"count_time":{"symbolsCount":557,"symbolsTime":"1 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"IoT漏洞挖掘","uid":"4946ce3f910e8961231b36c71843c41e","slug":"HWS/2021/IoT漏洞挖掘","date":"2022-02-04T02:13:10.000Z","updated":"2022-02-05T04:02:54.445Z","comments":true,"path":"api/articles/HWS/2021/IoT漏洞挖掘.json","cover":"/img/33.png","text":" IoT固件安全之漏洞挖掘常用组件中的漏洞品发点web管理服务uhttpd最常用的服务 历史漏洞：CVE-2019-19945、CVE-2018-19630 主流组件漏洞：LuCI（CVE-2019-17367、CVE-2019-12272）、UCI（CVE-2020-28951...","link":"","photos":[],"count_time":{"symbolsCount":894,"symbolsTime":"1 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"物联网渗透","uid":"c9203e32c2797e4aca5216137b90ff82","slug":"HWS/2021/物联网渗透","date":"2022-02-04T01:05:46.000Z","updated":"2022-02-04T02:13:42.642Z","comments":true,"path":"api/articles/HWS/2021/物联网渗透.json","cover":"/img/32.jpg","text":" 物联网渗透物联网设备安全概述物联网设备层次模型 物理感知层（固件提取、硬件攻击） 通信层（流量监听、中间人攻击） 管理控制层/应用层（web、rtsp、ssh…） 物联网设备通信模型云端，设备，移动端相互进行通信，三者各面临风险 云端安全风险 客户端（APP）安全风险 设备自身...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"HWS/2021","slug":"HWS-2021","count":5,"path":"api/categories/HWS-2021.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"PWN","uid":"5fc856885126d17b63352c1a2dc49ef9","slug":"HWS/2020/PWN","date":"2022-02-03T01:26:30.000Z","updated":"2022-02-04T01:10:00.926Z","comments":true,"path":"api/articles/HWS/2020/PWN.json","cover":"/img/31.jpg","text":" 栈溢出Linux保护技术概述Linux常见的保护机制 Canary：函数开始时向栈内插入canary值，返回时查询canary是否合法，以防止栈溢出（-fstack-protector 开启） Fortify：防止格式化字符串漏洞，包含%n的格式化字符串不能位于程序内存中的可写...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"HWS/2020","slug":"HWS-2020","count":2,"path":"api/categories/HWS-2020.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"DNS隐蔽信道综述","uid":"c4f987dd8b0d0b7837851ac5e86e8a3e","slug":"Research/Paper/DNS隐蔽信道综述","date":"2022-02-02T11:32:39.000Z","updated":"2022-02-05T07:56:11.317Z","comments":true,"path":"api/articles/Research/Paper/DNS隐蔽信道综述.json","cover":"/img/30.jpg","text":" DNS隐蔽信道综述本篇写为阅读《DNS隐蔽信道综述》的笔记，由于DNS以及DNS隧道相关内容在另一篇已经写过，就尽量减少重复了，可能有部分内容会减少提及。 DNS隐蔽信道（DNS covert channel，DCC） 本文贡献1.对DCC的威胁模型进行了归类总结；对DCC的发...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"Research/Paper","slug":"Research-Paper","count":2,"path":"api/categories/Research-Paper.json"}],"tags":[{"name":"Research Paper","slug":"Research-Paper","count":2,"path":"api/tags/Research-Paper.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"二进制","uid":"55fb07a4dbf6f44614d26c9d54b2e72f","slug":"HWS/2020/二进制","date":"2022-02-02T11:23:08.000Z","updated":"2022-02-04T01:09:53.767Z","comments":true,"path":"api/articles/HWS/2020/二进制.json","cover":"/img/29.jpg","text":"写在前面HWS运气好打进了线下，就补习一下前两年的夏令营知识，刚好用来入门RE和PWN，本分类就用于记一些笔记 另外下面的逆向工程这一块没什么用全是misc入门知识，但是既然写了也懒得删，就留着吧 加密与解密流密码随机数预测爆破知道随机数产生的内容，预测次数比较少，精度比较低，可...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"HWS/2020","slug":"HWS-2020","count":2,"path":"api/categories/HWS-2020.json"}],"tags":[{"name":"HWS","slug":"HWS","count":9,"path":"api/tags/HWS.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"高次剩余求解","uid":"0f98a03e2be0fa66aad63599b5ae90ad","slug":"CTF/crypto/高次剩余求解","date":"2022-01-23T10:05:35.000Z","updated":"2022-01-23T12:33:27.135Z","comments":true,"path":"api/articles/CTF/crypto/高次剩余求解.json","cover":"/img/28.jpg","text":" 高次剩余求解最近遇到了一个新的高次剩余求解的题目，学到了一个叫AMM的算法来求解，记录一下，顺便回头有空了补一下二次剩余的(挖坑ing)，已经忘了差不多了 推导过程懒得看了，直接贴上论文的求解过程 然后求解代码如下(代码来自智慧与美貌并存的好哥哥曲映曦师傅)，其中x是，e是r，...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"CTF/CRYPTO","slug":"CTF-CRYPTO","count":2,"path":"api/categories/CTF-CRYPTO.json"}],"tags":[{"name":"CTF CRYPTO","slug":"CTF-CRYPTO","count":2,"path":"api/tags/CTF-CRYPTO.json"}],"author":{"name":"S1eepy","slug":"blog-author","avatar":"/img/touxiang.jpg","link":"/","description":"Someone who is learning how to take life seriously","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}